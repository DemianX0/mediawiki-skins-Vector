@import '../vector.variables.less';
@import 'mediawiki.mixins.less';

// Putting a `skin-vector-max-width` class on the body and wrapping the rules
// herein enables the ability to feature flag the max-width design. This is
// listed in the acceptance criteria of T246420. In other words, if this class
// is present, the max-width design will appear. Without this class, max-width
// design will not appear. In either case, the appearance should not be broken.
.mw-page-container {
	//@padding-horizontal-page-container: unit( 30px / @font-size-root--px, em ); // 30/16 = 1.875em
	@padding-horizontal-page-container: @padding-horizontal-header; // 1.7em -> 27.2px
	@max-width-page-container--narrow: unit( 600px / @font-size-root--px, em ); // 37.5em
	@max-width-page-container: unit( 1650px / @font-size-root--px, em ) + 2 * @padding-horizontal-page-container; // 103.125em + 2*1.875em = 106.875em -> 1710px
	//@min-width-page-container: unit( 600px  / @font-size-root--px, em ); // 31.25em
	@min-width-page-container--padded: @max-width-page-container;
	@min-width-content-container--padded: @max-width-workspace-container + 2 * @padding-horizontal-page-container; // 93.75em -> 1500px
	@background-color-page-container: @background-color-base;
	@max-width-workspace-container: unit( 1440px / @font-size-root--px, em ); // 90em
	@max-width-sidebar-anchor: @min-width-content-container--padded
		+ 2 * ( @padding-horizontal-page-container + @padding-left-sidebar + @padding-left-portal );
		// 93.75em + 2 * (1.875em + 0.5em + 1.2em ) = 100.9em -> 1614.4px   // = 97.5em -> 1560px
	@max-width-content-container: unit( 960px  / @font-size-root--px, em ); // 60em
	// TODO: Remove @padding-content in variables.less when the max-width layout
	// becomes the default layout since the value is different between legacy and
	// latest.
	@padding-content: 1.25em 0.5em 1.5em 0.5em;
	// We want ~60px of space between the end of the sidebar and the start of the
	// content container for aesthetic reasons. The sidebar is already displaced
	// -30px so we simply add 30px of space to the width of the sidebar.
	//@margin-left-content-with-sidebar: @padding-horizontal-page-container; // 1.875em
	// Space between the end of the sidebar and the start of the content container for aesthetic reasons.
	@margin-left-content-with-sidebar: 1em;
	@margin-start-content: @width-sidebar-navigation + @margin-left-content-with-sidebar; // 12em
	// Equivalent to 1424px. This determines the maximum width breakpoint at which
	// the content will have a fixed start margin applied to it when the sidebar
	// is open. The content can shift its position when the sidebar is open/closed
	// at or below this breakpoint and will maintain its position above this
	// breakpoint.
	@max-width-margin-start-content: 2 * ( @padding-horizontal-page-container + @margin-start-content ) + @max-width-content-container + 1.25em;
	// 2 * (1.875em + 12em) + 60em + 1.25em = 89em -> 1424px

	// Colors
	@background-color-secondary--modern: #f8f9fa;
	@border-color-sidebar: @background-color-secondary--modern;
 	@box-shadow-color: #f0f0f0;
 
	// Style overrides for existing elements. Mostly overrides layout.less rules.
	background-color: @background-color-secondary--modern;

	.mw-body {
		border-left: 0;
		border-bottom: 0;
		padding: @padding-content;
	}

	.parsoid-body {
		padding: @padding-content;
	}

	.mw-body,
	#mw-data-after-content,
	.mw-footer {
		margin-left: 0;
	}

	body:not( .skin-vector-new-search )& .mw-search {
		margin-right: 0;
	}

	#p-namespaces {
		background-image: none;
		padding-left: 0;
	}

	.mw-sidebar-anchor {
		// Position sidebar just below the logo.
		left: 0;
		right: 0;
		margin: 0 auto;
		max-width: @max-width-sidebar-anchor; // 97.5em -> 1560px
	}

	.mw-sidebar {
		background-image: linear-gradient( to bottom, @background-color-base 0%, @background-color-secondary--modern 10%, @background-color-secondary--modern 90%, @background-color-base 100% );
		// Sidebar is displaced from the workspace container so that the
		// sidebar is flush with the edge of the screen at small widths.
		// left: -@padding-horizontal-page-container;
		// To avoid the white part of the gradient colliding with the sidebar links
		// we apply top and bottom padding.
		//padding-bottom: unit( 40px / @font-size-root--px, em ); // 40/16 = 2.5em
	}

	.mw-footer {
		border-top: @border-base;
		padding: 32px 0 0 0;
	}

	// Container logic.
	& {
 		//min-width: @min-width-page-container;
		max-width: @max-width-page-container;
		// Fill the viewport even if the content height is small. This also helps
		// mitigate a long sidebar overflowing the page container (T257518).
		min-height: 100%;
		margin: 0 auto;
		background-color: @background-color-page-container;
	}

	.mw-header {
		max-width: @max-width-page-container;
		margin: 0 auto;
	}

	.mw-workspace-container {
		max-width: @max-width-workspace-container;
		margin: 0 auto;
	}

	.mw-article-toolbar,
	.mw-workspace-container {
		padding: 0 @padding-horizontal-page-container;

		// Small padding on narrow viewport.
		@media ( max-width: @max-width-page-container--narrow ) {
			padding: 0 ( @padding-horizontal-page-container / 2 );
		}
	}

	.mw-article-toolbar,
	.mw-content-container {
		// We want to keep the max-width of the article-toolbar-container the
		// same max-width as the article page's content container in order to
		// prevent it from moving when going from an article page to a
		// history/special page.
		max-width: @max-width-content-container;
		margin-left: auto;
		margin-right: auto;
	}

	.mw-footer-container {
		padding-top: 50px;
		padding-bottom: 82px;
	}

	// Enable sidebar animation on all widths by default.
	.vector-animations-ready & .mw-sidebar {
		@timing: @transition-duration-base * 2 ease-out;
		.transition( transform @timing, opacity @timing, visibility @timing; );
	}

	// For container logic specific to special pages and history pages.
	&.action-history,
	&.ns-special {
		// Allow the max-width of content on history/special pages to be wider than
		// the max-width of content on article pages.
		.mw-content-container {
			// The parent .mw-workspace-container also sets this limit.
			max-width: @max-width-workspace-container;
		}

		// Adjusts the content, but not the toolbar when the sidebar is open on wide screen.
		#mw-sidebar-checkbox:checked {
			~ @{css-selector-content-container} {
				margin-left: @margin-start-content;
			}
		}

		.mw-sidebar {
			// Same specificity as `.vector-animations-ready &`, but later in order.
			// Remove sidebar transition in wide workspace.
			.transition( none );
		}
	}

	// We want it to appear like the sidebar is going into/coming out of
	// `.mw-page-container`, but we can't use `overflow: hidden` on
	// `.mw-page-container` because that will cut off the sidebar. Therefore, we
	// calculate the maximum distance from the start of `mw-page-container` to the
	// start of the sidebar.
	#mw-sidebar-checkbox:not( :checked ) {
		~ @{css-selector-sidebar} {
			.transform( translateX( -( @max-width-page-container - @max-width-workspace-container ) / 2 ) );
		}
	}

	// No animation on smaller width. 89em -> 1424px
	@media ( max-width: @max-width-margin-start-content ) {
		// Adjust the content and the toolbar when the sidebar is open and the viewport width is small.
		#mw-sidebar-checkbox:checked {
			~ @{css-selector-article-toolbar},
			~ @{css-selector-content-container} {
				margin-left: @margin-start-content;
			}
		}

		.mw-sidebar.mw-sidebar {
			// Same specificity as `.vector-animations-ready &`, but later in order.
			// Remove sidebar transition at smaller widths.
			.transition( none );
		}
	}

	// Subtle sidebar border on wide viewport. 93.75em -> 1500px
	@media ( min-width: @min-width-content-container--padded ) {
		.mw-sidebar {
			background: @background-color-page-container;
			border-right: @border-width-base solid @border-color-sidebar;
			@color-outside: @background-color-base;
			@color-inside: @border-color-sidebar; // @background-color-secondary--modern;
			@color-inside: @border-color-sidebar--gradient;
			border-image: linear-gradient( to bottom, @color-outside 0%, @color-inside 10%, @color-inside 90%, @color-outside 100% ) 1 100%;
		}
	}

	// Page border on very wide viewport. 106.875em -> 1710px
	@media ( min-width: @min-width-page-container--padded ) {
		box-shadow: 0 0 2em 0em @box-shadow-color;
	}
}
